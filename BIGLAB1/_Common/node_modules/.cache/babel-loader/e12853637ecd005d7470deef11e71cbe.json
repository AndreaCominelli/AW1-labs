{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giang\\\\Desktop\\\\Progetti\\\\Universitari\\\\_WIP\\\\AW1-labs\\\\BIGLAB1\\\\_Common\\\\src\\\\AdderComponents.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport dayjs from 'dayjs';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport PlusCircleFill from 'react-bootstrap-icons/dist/icons/plus-circle-fill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskAdder(props) {\n  _s();\n\n  const baseFormState = {\n    description: {\n      value: '',\n      isValid: false\n    },\n    date: dayjs()\n  };\n  const [show, setShow] = useState(false);\n  const [formState, setFormState] = useState(baseFormState);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const handleSumbit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    const id = props.tasks.reduce((prev, current) => prev.id > current.id ? prev.id : current.id) + 1; //const task = { id: id, description: description, isPrivate: isPrivate, isUrgent: isImportant, date: date };\n    //props.setTasks(tsks => [...tsks, task]);\n\n    handleClose(); //setValidated(false);\n  };\n\n  const handleChange = ev => {\n    switch (ev.target.id) {\n      case 'formDescription':\n        setFormState(baseFormState.description = {\n          value: ev.target.value,\n          isValid: ev.target.value && true\n        });\n        console.log(formState);\n        break;\n\n      case 'formDeadline':\n        setFormState(baseFormState.date = dayjs(ev.target.value));\n        break;\n    }\n  };\n\n  const formProps = {\n    handleChange: handleChange\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleFill, {\n      color: \"#17a2b8\",\n      size: 64,\n      onClick: handleShow,\n      className: \"cursor-pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(TaskForm, { ...formProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleSumbit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TaskAdder, \"brzzyBUr11RfKfJWAp017HMKsAI=\");\n\n_c = TaskAdder;\n\nfunction TaskForm(props) {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formDescription\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter a description for your task\",\n        onChange: ev => props.handleChange(ev),\n        isInvalid: false,\n        isValid: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please add a description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"d-flex\",\n      controlId: \"formCheckboxes\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"form-checkbox-1\",\n        label: \"Private\",\n        className: \"mr-3\",\n        onChange: ev => props.handleChange(ev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"form-checkbox-2\",\n        label: \"Important\",\n        onChange: ev => props.handleChange(ev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formDeadline\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: ev => props.handleChange(ev),\n        isInvalid: false,\n        isValid: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Deadline should be after current time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TaskForm;\nexport default TaskAdder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskAdder\");\n$RefreshReg$(_c2, \"TaskForm\");","map":{"version":3,"sources":["C:/Users/giang/Desktop/Progetti/Universitari/_WIP/AW1-labs/BIGLAB1/_Common/src/AdderComponents.js"],"names":["React","useState","dayjs","Modal","Form","Button","PlusCircleFill","TaskAdder","props","baseFormState","description","value","isValid","date","show","setShow","formState","setFormState","handleClose","handleShow","handleSumbit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","id","tasks","reduce","prev","current","handleChange","ev","target","console","log","formProps","TaskForm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport PlusCircleFill from 'react-bootstrap-icons/dist/icons/plus-circle-fill';\r\n\r\nfunction TaskAdder(props) {\r\n    const baseFormState = {\r\n        description: {value: '', isValid: false}, date: dayjs()\r\n    };\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [formState, setFormState] = useState(baseFormState);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const handleSumbit = (event) => {\r\n        const form = event.currentTarget;\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const id = props.tasks.reduce((prev, current) => (prev.id > current.id) ? prev.id : current.id) + 1;\r\n        //const task = { id: id, description: description, isPrivate: isPrivate, isUrgent: isImportant, date: date };\r\n\r\n        //props.setTasks(tsks => [...tsks, task]);\r\n        handleClose();\r\n        //setValidated(false);\r\n    };\r\n\r\n    const handleChange = (ev) => {\r\n        switch(ev.target.id) {\r\n            case 'formDescription':\r\n                setFormState(baseFormState.description = {value: ev.target.value, isValid: ev.target.value && true});\r\n                console.log(formState);\r\n                break;\r\n            case 'formDeadline':\r\n                setFormState(baseFormState.date = dayjs(ev.target.value));\r\n                break;\r\n        }\r\n    };\r\n\r\n    const formProps = {handleChange: handleChange};\r\n\r\n    return (\r\n        <>\r\n            <PlusCircleFill color=\"#17a2b8\" size={64} onClick={handleShow} className=\"cursor-pointer\" />\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add new task</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <TaskForm  {...formProps} />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"info\" onClick={handleSumbit}>Confirm</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction TaskForm(props) {\r\n    return (\r\n        <Form noValidate>\r\n            <Form.Group controlId=\"formDescription\">\r\n                <Form.Label>Task description</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter a description for your task\"\r\n                    onChange={(ev) => props.handleChange(ev)}\r\n                    isInvalid={false}\r\n                    isValid={false}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    Please add a description.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"d-flex\" controlId=\"formCheckboxes\">\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id=\"form-checkbox-1\"\r\n                    label=\"Private\"\r\n                    className=\"mr-3\"\r\n                    onChange={(ev) => props.handleChange(ev)}\r\n                />\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id=\"form-checkbox-2\"\r\n                    label=\"Important\"\r\n                    onChange={(ev) => props.handleChange(ev)}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formDeadline\">\r\n                <Form.Label>Deadline</Form.Label>\r\n                <Form.Control type=\"date\" onChange={(ev) => props.handleChange(ev)}\r\n                    isInvalid={false}\r\n                    isValid={false}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    Deadline should be after current time.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default TaskAdder;"]},"metadata":{},"sourceType":"module"}