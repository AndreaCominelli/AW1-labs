{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giang\\\\Desktop\\\\Progetti\\\\Universitari\\\\_WIP\\\\AW1-labs\\\\BIGLAB1\\\\_Common\\\\src\\\\AdderComponents.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport dayjs from 'dayjs';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport PlusCircleFill from 'react-bootstrap-icons/dist/icons/plus-circle-fill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskAdder(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [description, setDescription] = useState('');\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [isImportant, setIsImportant] = useState(false);\n  const [date, setDate] = useState('');\n  const [validated, setValidated] = useState(false);\n  const [dateIsValid, setDateIsValid] = useState();\n  const [descIsValid, setDescIsValid] = useState();\n\n  const handleShow = () => setShow(true);\n\n  const handleClose = () => {\n    setShow(false);\n    setValidated(false);\n  };\n\n  const handleSumbit = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    const id = props.tasks.reduce((prev, current) => prev.id > current.id ? prev.id : current.id) + 1;\n    const task = {\n      id: id,\n      description: description,\n      isPrivate: isPrivate,\n      isUrgent: isImportant,\n      date: dayjs(date)\n    };\n\n    if (descIsValid && dateIsValid) {\n      props.setTasks(tsks => [...tsks, task]);\n      handleClose();\n      clearForm();\n    } else setValidated(true);\n  };\n\n  const handleDateChange = ev => {\n    setDate(ev.target.value);\n    setDateIsValid(dayjs(ev.target.value) >= dayjs().startOf('d'));\n  };\n\n  const handleDescChange = ev => {\n    setDescription(ev.target.value);\n    setDescIsValid(ev.target.value ? true : false);\n  };\n\n  const clearForm = () => {\n    setValidated(false);\n    setDescription('');\n    setIsPrivate(false);\n    setIsImportant(false);\n    setDate('');\n    setDateIsValid(false);\n    setDescIsValid(false);\n  };\n\n  const formProps = {\n    description: description,\n    isPrivate: isPrivate,\n    isImportant: isImportant,\n    date: date,\n    validated: validated,\n    dateIsValid: dateIsValid,\n    descIsValid: descIsValid,\n    setDescription: setDescription,\n    setIsPrivate: setIsPrivate,\n    setIsImportant: setIsImportant,\n    handleDateChange: handleDateChange,\n    handleDescChange: handleDescChange\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleFill, {\n      color: \"#17a2b8\",\n      size: 64,\n      onClick: handleShow,\n      className: \"cursor-pointer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(TaskForm, { ...formProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"light\",\n          onClick: clearForm,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleSumbit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TaskAdder, \"TMa50yBZL8vVgmlieO3ZJGRiA0g=\");\n\n_c = TaskAdder;\n\nfunction TaskForm(props) {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formDescription\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter a description for your task\",\n        onChange: ev => props.handleDescChange(ev),\n        isInvalid: !props.validated ? false : !props.descIsValid,\n        isValid: !props.validated ? false : props.descIsValid,\n        value: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please add a description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"d-flex\",\n      controlId: \"formCheckboxes\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"form-checkbox-1\",\n        label: \"Private\",\n        className: \"mr-3\",\n        onChange: ev => props.setIsPrivate(ev.target.checked),\n        checked: props.isPrivate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"form-checkbox-2\",\n        label: \"Important\",\n        onChange: ev => props.setIsImportant(ev.target.checked),\n        checked: props.isImportant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: ev => props.handleDateChange(ev),\n        isInvalid: !props.validated ? false : !props.dateIsValid,\n        isValid: !props.validated ? false : props.dateIsValid,\n        value: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Deadline should be after current time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TaskForm;\nexport default TaskAdder;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskAdder\");\n$RefreshReg$(_c2, \"TaskForm\");","map":{"version":3,"sources":["C:/Users/giang/Desktop/Progetti/Universitari/_WIP/AW1-labs/BIGLAB1/_Common/src/AdderComponents.js"],"names":["React","useState","dayjs","Modal","Form","Button","PlusCircleFill","TaskAdder","props","show","setShow","description","setDescription","isPrivate","setIsPrivate","isImportant","setIsImportant","date","setDate","validated","setValidated","dateIsValid","setDateIsValid","descIsValid","setDescIsValid","handleShow","handleClose","handleSumbit","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","id","tasks","reduce","prev","current","task","isUrgent","setTasks","tsks","clearForm","handleDateChange","ev","target","value","startOf","handleDescChange","formProps","TaskForm","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport PlusCircleFill from 'react-bootstrap-icons/dist/icons/plus-circle-fill';\r\n\r\nfunction TaskAdder(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [description, setDescription] = useState('');\r\n    const [isPrivate, setIsPrivate] = useState(false);\r\n    const [isImportant, setIsImportant] = useState(false);\r\n    const [date, setDate] = useState('');\r\n    const [validated, setValidated] = useState(false);\r\n    const [dateIsValid, setDateIsValid] = useState();\r\n    const [descIsValid, setDescIsValid] = useState();\r\n\r\n    const handleShow = () => setShow(true);\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setValidated(false);\r\n    };\r\n\r\n    const handleSumbit = (event) => {\r\n        const form = event.currentTarget;\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const id = props.tasks.reduce((prev, current) => (prev.id > current.id) ? prev.id : current.id) + 1;\r\n        const task = { id: id, description: description, isPrivate: isPrivate, isUrgent: isImportant, date: dayjs(date) };\r\n\r\n        if (descIsValid && dateIsValid) {\r\n            props.setTasks(tsks => [...tsks, task]);\r\n            handleClose();\r\n            clearForm();\r\n        }\r\n        else setValidated(true);\r\n    };\r\n\r\n    const handleDateChange = (ev) => {\r\n        setDate(ev.target.value);\r\n        setDateIsValid(dayjs(ev.target.value) >= dayjs().startOf('d'));\r\n    };\r\n\r\n    const handleDescChange = (ev) => {\r\n        setDescription(ev.target.value);\r\n        setDescIsValid(ev.target.value ? true : false);\r\n    };\r\n\r\n    const clearForm = () => {\r\n        setValidated(false);\r\n        setDescription('');\r\n        setIsPrivate(false);\r\n        setIsImportant(false);\r\n        setDate('');\r\n        setDateIsValid(false);\r\n        setDescIsValid(false);\r\n    };\r\n\r\n    const formProps = {\r\n        description: description, isPrivate: isPrivate, isImportant: isImportant, date: date, validated: validated,\r\n        dateIsValid: dateIsValid, descIsValid: descIsValid,\r\n        setDescription: setDescription, setIsPrivate: setIsPrivate, setIsImportant: setIsImportant,\r\n        handleDateChange: handleDateChange, handleDescChange: handleDescChange\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <PlusCircleFill color=\"#17a2b8\" size={64} onClick={handleShow} className=\"cursor-pointer\" />\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add new task</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <TaskForm  {...formProps} />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"light\" onClick={clearForm}>Clear</Button>\r\n                    <Button variant=\"info\" onClick={handleSumbit}>Confirm</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction TaskForm(props) {\r\n    return (\r\n        <Form noValidate>\r\n            <Form.Group controlId=\"formDescription\">\r\n                <Form.Label>Task description</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter a description for your task\"\r\n                    onChange={(ev) => props.handleDescChange(ev)}\r\n                    isInvalid={!props.validated ? false : !props.descIsValid}\r\n                    isValid={!props.validated ? false : props.descIsValid}\r\n                    value={props.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    Please add a description.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"d-flex\" controlId=\"formCheckboxes\">\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id=\"form-checkbox-1\"\r\n                    label=\"Private\"\r\n                    className=\"mr-3\"\r\n                    onChange={(ev) => props.setIsPrivate(ev.target.checked)}\r\n                    checked={props.isPrivate}\r\n                />\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id=\"form-checkbox-2\"\r\n                    label=\"Important\"\r\n                    onChange={(ev) => props.setIsImportant(ev.target.checked)}\r\n                    checked={props.isImportant}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Deadline</Form.Label>\r\n                <Form.Control type=\"date\" onChange={(ev) => props.handleDateChange(ev)}\r\n                    isInvalid={!props.validated ? false : !props.dateIsValid}\r\n                    isValid={!props.validated ? false : props.dateIsValid}\r\n                    value={props.date}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    Deadline should be after current time.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default TaskAdder;"]},"metadata":{},"sourceType":"module"}