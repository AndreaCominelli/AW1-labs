{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giang\\\\Desktop\\\\Progetti\\\\Universitari\\\\_WIP\\\\AW1-labs\\\\BIGLAB1\\\\_Common\\\\src\\\\AdderComponents.js\";\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport PlusCircleFill from 'react-bootstrap-icons/dist/icons/plus-circle-fill';\nimport Check2 from 'react-bootstrap-icons/dist/icons/check2';\nimport X from 'react-bootstrap-icons/dist/icons/x';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskAdder(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleFill, {\n      color: \"#17a2b8\",\n      size: 64,\n      onClick: props.handleShow,\n      className: \"cursor-pointer hover-scaleup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: props.show,\n      onHide: props.handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(TaskForm, { ...props.formProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"text-dark\",\n          onClick: props.clearForm,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: props.handleSumbit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = TaskAdder;\n\nfunction TaskForm2(props) {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    onSubmit: props.handleSumbit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formDescription\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Enter a description for your task\",\n        onChange: ev => props.handleDescChange(ev),\n        isInvalid: !props.validated ? false : !props.descIsValid,\n        isValid: !props.validated ? false : props.descIsValid,\n        value: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please add a description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"d-flex\",\n      controlId: \"formCheckboxes\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"form-checkbox-1\",\n        label: \"Private\",\n        className: \"mr-3\",\n        onChange: ev => props.setIsPrivate(ev.target.checked),\n        checked: props.isPrivate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        id: \"form-checkbox-2\",\n        label: \"Important\",\n        onChange: ev => props.setIsImportant(ev.target.checked),\n        checked: props.isImportant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"date\",\n        onChange: ev => props.handleDateChange(ev),\n        isInvalid: !props.validated ? false : !props.dateIsValid,\n        isValid: !props.validated ? false : props.dateIsValid,\n        value: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Deadline should be after current time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TaskForm2;\n\nfunction TaskForm(props) {\n  const formDescription = /*#__PURE__*/_jsxDEV(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter a description for your task\",\n    onChange: ev => props.handleDescChange(ev),\n    isInvalid: !props.validated ? false : !props.descIsValid,\n    isValid: !props.validated ? false : props.descIsValid,\n    value: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 29\n  }, this);\n\n  const formImportant = /*#__PURE__*/_jsxDEV(Form.Check, {\n    custom: true,\n    type: \"checkbox\",\n    id: \"form-checkbox-1\",\n    label: \"Important\",\n    onChange: ev => props.setIsimportant(ev.target.checked),\n    checked: props.isImportant\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 27\n  }, this);\n\n  const formPrivate = /*#__PURE__*/_jsxDEV(Form.Check, {\n    custom: true,\n    type: \"checkbox\",\n    id: \"form-checkbox-1\",\n    label: \"Private\",\n    className: \"mr-3\",\n    onChange: ev => props.setIsPrivate(ev.target.checked),\n    checked: props.isPrivate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 25\n  }, this);\n\n  const formDeadline = /*#__PURE__*/_jsxDEV(Form.Control, {\n    type: \"date\",\n    onChange: ev => props.handleDateChange(ev),\n    isInvalid: !props.validated ? false : !props.dateIsValid,\n    isValid: !props.validated ? false : props.dateIsValid,\n    value: props.date\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 26\n  }, this);\n\n  console.log('props.editMode: ', props.editMode);\n  return props.editMode < 0 ? /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    onSubmit: props.handleSumbit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formDescription\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), formDescription, /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please add a description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"d-flex\",\n      controlId: \"formCheckboxes\",\n      children: (formPrivate, formImportant)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this), formDeadline, /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Deadline should be after current time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    className: \"d-flex align-items-center flex-column flex-md-row\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      as: \"span\",\n      children: formDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      as: \"span\",\n      className: \"d-flex justify-content-md-center my-3\",\n      children: (formPrivate, formImportant)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      as: \"span\",\n      className: \"font-075 text-right d-flex justify-content-end align-items-center\",\n      children: [formDeadline, /*#__PURE__*/_jsxDEV(X, {\n        size: 40,\n        className: \"hover-scaleup cursor-pointer ml-3 mr-1\",\n        onClick: () => props.editTask(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Check2, {\n        size: 48,\n        color: \"#17a2b8\",\n        className: \"hover-scaleup cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 13\n  }, this);\n}\n\n_c3 = TaskForm;\nexport { TaskAdder, TaskForm };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TaskAdder\");\n$RefreshReg$(_c2, \"TaskForm2\");\n$RefreshReg$(_c3, \"TaskForm\");","map":{"version":3,"sources":["C:/Users/giang/Desktop/Progetti/Universitari/_WIP/AW1-labs/BIGLAB1/_Common/src/AdderComponents.js"],"names":["Modal","Form","Button","Col","ListGroup","PlusCircleFill","Check2","X","TaskAdder","props","handleShow","show","handleClose","formProps","clearForm","handleSumbit","TaskForm2","ev","handleDescChange","validated","descIsValid","description","setIsPrivate","target","checked","isPrivate","setIsImportant","isImportant","handleDateChange","dateIsValid","date","TaskForm","formDescription","formImportant","setIsimportant","formPrivate","formDeadline","console","log","editMode","editTask"],"mappings":"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","sourcesContent":["import Modal from 'react-bootstrap/Modal';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nimport PlusCircleFill from 'react-bootstrap-icons/dist/icons/plus-circle-fill';\r\nimport Check2 from 'react-bootstrap-icons/dist/icons/check2';\r\nimport X from 'react-bootstrap-icons/dist/icons/x';\r\n\r\nfunction TaskAdder(props) {\r\n    return (\r\n        <>\r\n            <PlusCircleFill color=\"#17a2b8\" size={64} onClick={props.handleShow} className=\"cursor-pointer hover-scaleup\" />\r\n            <Modal show={props.show} onHide={props.handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add new task</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <TaskForm  {...props.formProps} />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"link\" className=\"text-dark\" onClick={props.clearForm}>Clear</Button>\r\n                    <Button variant=\"info\" onClick={props.handleSumbit}>Confirm</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction TaskForm2(props) {\r\n    return (\r\n        <Form noValidate onSubmit={props.handleSumbit}>\r\n            <Form.Group controlId=\"formDescription\">\r\n                <Form.Label>Task description</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter a description for your task\"\r\n                    onChange={(ev) => props.handleDescChange(ev)}\r\n                    isInvalid={!props.validated ? false : !props.descIsValid}\r\n                    isValid={!props.validated ? false : props.descIsValid}\r\n                    value={props.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    Please add a description.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group className=\"d-flex\" controlId=\"formCheckboxes\">\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id=\"form-checkbox-1\"\r\n                    label=\"Private\"\r\n                    className=\"mr-3\"\r\n                    onChange={(ev) => props.setIsPrivate(ev.target.checked)}\r\n                    checked={props.isPrivate}\r\n                />\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id=\"form-checkbox-2\"\r\n                    label=\"Important\"\r\n                    onChange={(ev) => props.setIsImportant(ev.target.checked)}\r\n                    checked={props.isImportant}\r\n                />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label>Deadline</Form.Label>\r\n                <Form.Control type=\"date\" onChange={(ev) => props.handleDateChange(ev)}\r\n                    isInvalid={!props.validated ? false : !props.dateIsValid}\r\n                    isValid={!props.validated ? false : props.dateIsValid}\r\n                    value={props.date}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    Deadline should be after current time.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n}\r\n\r\nfunction TaskForm(props) {\r\n    const formDescription = <Form.Control type=\"text\" placeholder=\"Enter a description for your task\"\r\n        onChange={(ev) => props.handleDescChange(ev)}\r\n        isInvalid={!props.validated ? false : !props.descIsValid}\r\n        isValid={!props.validated ? false : props.descIsValid}\r\n        value={props.description}\r\n    />\r\n\r\n    const formImportant = <Form.Check\r\n        custom\r\n        type=\"checkbox\"\r\n        id=\"form-checkbox-1\"\r\n        label=\"Important\"\r\n        onChange={(ev) => props.setIsimportant(ev.target.checked)}\r\n        checked={props.isImportant}\r\n    />\r\n\r\n    const formPrivate = <Form.Check\r\n        custom\r\n        type=\"checkbox\"\r\n        id=\"form-checkbox-1\"\r\n        label=\"Private\"\r\n        className=\"mr-3\"\r\n        onChange={(ev) => props.setIsPrivate(ev.target.checked)}\r\n        checked={props.isPrivate}\r\n    />\r\n\r\n    const formDeadline = <Form.Control type=\"date\" onChange={(ev) => props.handleDateChange(ev)}\r\n        isInvalid={!props.validated ? false : !props.dateIsValid}\r\n        isValid={!props.validated ? false : props.dateIsValid}\r\n        value={props.date}\r\n    />\r\n\r\n    console.log('props.editMode: ', props.editMode);\r\n\r\n    return (\r\n        props.editMode < 0 ?\r\n            <Form noValidate onSubmit={props.handleSumbit}>\r\n                <Form.Group controlId=\"formDescription\">\r\n                    <Form.Label>Task description</Form.Label>\r\n                    {formDescription}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please add a description.\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"d-flex\" controlId=\"formCheckboxes\">\r\n                    {formPrivate, formImportant}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Deadline</Form.Label>\r\n                    {formDeadline}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Deadline should be after current time.\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Form>\r\n            :\r\n            <ListGroup.Item className=\"d-flex align-items-center flex-column flex-md-row\">\r\n                <Col as=\"span\">\r\n                    {formDescription}\r\n                </Col>\r\n                <Col as=\"span\" className=\"d-flex justify-content-md-center my-3\">\r\n                    {formPrivate, formImportant}\r\n                </Col>\r\n                <Col as=\"span\" className=\"font-075 text-right d-flex justify-content-end align-items-center\">\r\n                    {formDeadline}\r\n                    <X size={40} className=\"hover-scaleup cursor-pointer ml-3 mr-1\" onClick={() => props.editTask(-1)} />\r\n                    <Check2 size={48} color=\"#17a2b8\" className=\"hover-scaleup cursor-pointer\" />\r\n                </Col>\r\n            </ListGroup.Item>\r\n    );\r\n}\r\n\r\nexport {TaskAdder, TaskForm};"]},"metadata":{},"sourceType":"module"}