{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\giang\\\\Desktop\\\\Progetti\\\\Universitari\\\\_WIP\\\\AW1-labs\\\\BIGLAB1\\\\_Common\\\\src\\\\AdderComponents.js\";\nimport { Modal, Form, Col, ListGroup, Button } from 'react-bootstrap';\nimport { PlusCircleFill, Check, X } from 'react-bootstrap-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskAdder(props) {\n  const {\n    show,\n    handleShow,\n    handleClose,\n    clearForm,\n    handleSumbit,\n    ...propsObj\n  } = props;\n  let {\n    description,\n    ...prova\n  } = {\n    show,\n    ...propsObj\n  };\n  console.log(prova);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PlusCircleFill, {\n      color: \"#17a2b8\",\n      size: 64,\n      onClick: handleShow,\n      className: \"cursor-pointer hover-scaleup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(TaskForm, { ...propsObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          className: \"text-dark\",\n          onClick: clearForm,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          onClick: handleSumbit,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_c = TaskAdder;\n\nfunction TaskForm(props) {\n  const formDescription = /*#__PURE__*/_jsxDEV(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter a description for your task\",\n    onChange: ev => props.handleDescChange(ev),\n    isInvalid: !props.validated ? false : !props.description.isValid,\n    isValid: !props.validated ? false : props.description.isValid,\n    value: props.description.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 29\n  }, this);\n\n  const formImportant = /*#__PURE__*/_jsxDEV(Form.Check, {\n    custom: true,\n    type: \"checkbox\",\n    id: \"form-checkbox-1\",\n    label: \"Important\",\n    onChange: ev => props.setIsImportant(ev.target.checked),\n    checked: props.isImportant\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 27\n  }, this);\n\n  const formPrivate = /*#__PURE__*/_jsxDEV(Form.Check, {\n    custom: true,\n    type: \"checkbox\",\n    id: \"form-checkbox-2\",\n    label: \"Private\",\n    className: \"mr-3\",\n    onChange: ev => props.setIsPrivate(ev.target.checked),\n    checked: props.isPrivate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 25\n  }, this);\n\n  const formDeadline = /*#__PURE__*/_jsxDEV(Form.Control, {\n    type: \"date\",\n    onChange: ev => props.handleDateChange(ev),\n    isInvalid: !props.validated ? false : !props.date.isValid,\n    isValid: !props.validated ? false : props.date.isValid,\n    value: props.date.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 26\n  }, this);\n\n  return props.editMode < 0 ? /*#__PURE__*/_jsxDEV(Form, {\n    noValidate: true,\n    onSubmit: props.handleSumbit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formDescription\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), formDescription, /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Please add a description.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"d-flex\",\n      controlId: \"formCheckboxes\",\n      children: [formPrivate, \" \", formImportant]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Deadline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), formDeadline, /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n        type: \"invalid\",\n        children: \"Deadline should be after current time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      onSubmit: props.handleSumbit,\n      className: \"d-flex align-items-center flex-column flex-md-row\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        as: \"span\",\n        children: formDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        as: \"span\",\n        className: \"d-flex justify-content-md-center my-3\",\n        children: [formPrivate, \" \", formImportant]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        as: \"span\",\n        className: \"font-075 text-right d-flex justify-content-end align-items-center\",\n        children: [formDeadline, /*#__PURE__*/_jsxDEV(X, {\n          size: 40,\n          className: \"hover-scaleup cursor-pointer ml-3 mr-1\",\n          onClick: () => props.editTask(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Check, {\n          size: 48,\n          color: \"#17a2b8\",\n          className: \"hover-scaleup cursor-pointer\",\n          onClick: props.handleSumbit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 13\n  }, this);\n}\n\n_c2 = TaskForm;\nexport { TaskAdder, TaskForm };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskAdder\");\n$RefreshReg$(_c2, \"TaskForm\");","map":{"version":3,"sources":["C:/Users/giang/Desktop/Progetti/Universitari/_WIP/AW1-labs/BIGLAB1/_Common/src/AdderComponents.js"],"names":["Modal","Form","Col","ListGroup","Button","PlusCircleFill","Check","X","TaskAdder","props","show","handleShow","handleClose","clearForm","handleSumbit","propsObj","description","prova","console","log","TaskForm","formDescription","ev","handleDescChange","validated","isValid","value","formImportant","setIsImportant","target","checked","isImportant","formPrivate","setIsPrivate","isPrivate","formDeadline","handleDateChange","date","editMode","editTask"],"mappings":"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","sourcesContent":["import {Modal, Form, Col, ListGroup, Button} from 'react-bootstrap';\r\nimport {PlusCircleFill, Check, X} from 'react-bootstrap-icons';\r\n\r\nfunction TaskAdder(props) {\r\n    const { show, handleShow, handleClose, clearForm, handleSumbit, ...propsObj } = props;\r\n\r\n    let {description, ...prova} = {show, ...propsObj};\r\n    console.log(prova);\r\n\r\n    return (\r\n        <>\r\n            <PlusCircleFill color=\"#17a2b8\" size={64} onClick={handleShow} className=\"cursor-pointer hover-scaleup\" />\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add new task</Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <TaskForm  {...propsObj} />\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant=\"link\" className=\"text-dark\" onClick={clearForm}>Clear</Button>\r\n                    <Button variant=\"info\" onClick={handleSumbit}>Confirm</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction TaskForm(props) {\r\n    const formDescription = <Form.Control type=\"text\" placeholder=\"Enter a description for your task\"\r\n        onChange={(ev) => props.handleDescChange(ev)}\r\n        isInvalid={!props.validated ? false : !props.description.isValid}\r\n        isValid={!props.validated ? false : props.description.isValid}\r\n        value={props.description.value}\r\n    />\r\n\r\n    const formImportant = <Form.Check\r\n        custom\r\n        type=\"checkbox\"\r\n        id=\"form-checkbox-1\"\r\n        label=\"Important\"\r\n        onChange={(ev) => props.setIsImportant(ev.target.checked)}\r\n        checked={props.isImportant}\r\n    />\r\n\r\n    const formPrivate = <Form.Check\r\n        custom\r\n        type=\"checkbox\"\r\n        id=\"form-checkbox-2\"\r\n        label=\"Private\"\r\n        className=\"mr-3\"\r\n        onChange={(ev) => props.setIsPrivate(ev.target.checked)}\r\n        checked={props.isPrivate}\r\n    />\r\n\r\n    const formDeadline = <Form.Control type=\"date\" onChange={(ev) => props.handleDateChange(ev)}\r\n        isInvalid={!props.validated ? false : !props.date.isValid}\r\n        isValid={!props.validated ? false : props.date.isValid}\r\n        value={props.date.value}\r\n    />\r\n    \r\n    return (\r\n        props.editMode < 0 ?\r\n            <Form noValidate onSubmit={props.handleSumbit}>\r\n                <Form.Group controlId=\"formDescription\">\r\n                    <Form.Label>Task description</Form.Label>\r\n                    {formDescription}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please add a description.\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group className=\"d-flex\" controlId=\"formCheckboxes\">\r\n                    {formPrivate} {formImportant}\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Deadline</Form.Label>\r\n                    {formDeadline}\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Deadline should be after current time.\r\n                </Form.Control.Feedback>\r\n                </Form.Group>\r\n            </Form>\r\n            :\r\n            <ListGroup.Item>\r\n                <Form noValidate onSubmit={props.handleSumbit} className=\"d-flex align-items-center flex-column flex-md-row\">\r\n                    <Col as=\"span\">\r\n                        {formDescription}\r\n                    </Col>\r\n                    <Col as=\"span\" className=\"d-flex justify-content-md-center my-3\">\r\n                        {formPrivate} {formImportant}\r\n                    </Col>\r\n                    <Col as=\"span\" className=\"font-075 text-right d-flex justify-content-end align-items-center\">\r\n                        {formDeadline}\r\n                        <X size={40} className=\"hover-scaleup cursor-pointer ml-3 mr-1\" onClick={() => props.editTask(-1)} />\r\n                        <Check size={48} color=\"#17a2b8\" className=\"hover-scaleup cursor-pointer\" onClick={props.handleSumbit} />\r\n                    </Col>\r\n                </Form>\r\n            </ListGroup.Item>\r\n    );\r\n}\r\n\r\nexport {TaskAdder, TaskForm};"]},"metadata":{},"sourceType":"module"}