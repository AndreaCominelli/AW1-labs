[{"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\index.js":"1","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\App.js":"2","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\reportWebVitals.js":"3","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\FilterComponents.js":"4","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\data.js":"5","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\TaskComponents.js":"6","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\MainNav.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":2277,"mtime":1619424798233,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1118,"mtime":1619425842383,"results":"12","hashOfConfig":"9"},{"size":650,"mtime":1619424798241,"results":"13","hashOfConfig":"9"},{"size":4466,"mtime":1619424798240,"results":"14","hashOfConfig":"9"},{"size":1609,"mtime":1619424798237,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"12qvyxp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\index.js",[],["32","33"],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\App.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\reportWebVitals.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\FilterComponents.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\data.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\TaskComponents.js",["34","35","36","37"],"import dayjs from 'dayjs'\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport PeopleFill from 'react-bootstrap-icons/dist/icons/people-fill';\r\nimport ThreeDotsVertical from 'react-bootstrap-icons/dist/icons/three-dots-vertical';\r\nimport Trash2Fill from 'react-bootstrap-icons/dist/icons/trash2-fill';\r\nimport PencilSquare from 'react-bootstrap-icons/dist/icons/pencil-square';\r\n\r\nimport { tl } from './data';\r\n\r\nimport React, {useState} from 'react';\r\n\r\nfunction Task(props) {\r\n    return (\r\n        <ListGroup.Item className=\"d-flex align-items-center\">\r\n            <Col as=\"span\" className={props.isUrgent && \"text-danger font-weight-bold\"}>\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id={\"custom-checkbox-\" + props.id}\r\n                    label={props.description}\r\n                />\r\n            </Col>\r\n            <Col as=\"span\" className=\"text-dark text-center\">{props.isPrivate && <PeopleFill />}</Col>\r\n            <Col as=\"span\" className=\"font-075 text-right d-flex justify-content-end\"><span>{props.date}</span><TaskControls taskID={props.id} deleteTask={props.deleteTask} /></Col>\r\n        </ListGroup.Item>\r\n    );\r\n}\r\n\r\nfunction TaskControls(props) {\r\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n        <a\r\n            href=\"\"\r\n            ref={ref}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                onClick(e);\r\n            }}\r\n        >\r\n            {children}\r\n        </a>\r\n    ));\r\n\r\n    // forwardRef again here!\r\n    // Dropdown needs access to the DOM of the Menu to measure it\r\n    const CustomMenu = React.forwardRef(\r\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n            const [value, setValue] = useState('');\r\n\r\n            return (\r\n                <div\r\n                    ref={ref}\r\n                    style={style}\r\n                    className={className}\r\n                    aria-labelledby={labeledBy}\r\n                >\r\n                    <ul className=\"list-unstyled m-0\">\r\n                        {React.Children.toArray(children).filter(\r\n                            (child) =>\r\n                                !value || child.props.children.toLowerCase().startsWith(value),\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }, \r\n    );\r\n    return (\r\n        <Dropdown className=\"d-inline ml-2\">\r\n            <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n                <ThreeDotsVertical color=\"\" size={18} />\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu className=\"min-width-5\" as={CustomMenu}>\r\n                <Dropdown.Item className=\"px-3\"><PencilSquare className=\"mr-3\" size={16} />Edit</Dropdown.Item>\r\n                <Dropdown.Item className=\"px-3\" onClick={() => props.deleteTask(props.taskID)}><Trash2Fill className=\"mr-3\" size={16} />Delete</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nfunction TaskList(props) {\r\n    const [tasks, setTasks] = useState([...props.tl]);\r\n    let newList = applyFilter(props.activeFilter, tasks);\r\n\r\n    const deleteTask = (tskID) => {\r\n        setTasks( tsks => tsks.filter( t => t.id != tskID ) );\r\n    }\r\n\r\n    const taskList = [...newList].map(task => <Task key={task.id} {...task} deleteTask={deleteTask} />);\r\n    return (\r\n        <ListGroup variant=\"flush\" className=\"margin-b-75\">\r\n            {taskList}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nconst applyFilter = (selected, list) => {\r\n    switch(selected){\r\n        case 1:\r\n            return list;\r\n        case 2:\r\n            return (list.filter( task => task.isUrgent ));\r\n        case 3:\r\n            return (list.filter( task => {\r\n                if (dayjs(task.date).format(\"YYYY-MM-DD\") === dayjs().format(\"YYYY-MM-DD\") ) return true;\r\n                else return false;\r\n            }));\r\n        case 4:\r\n            return (list.filter( task => {\r\n                if (dayjs(task.date).isAfter( dayjs().add(7, 'day') )) return true;\r\n                else return false;\r\n            }));\r\n        case 5:\r\n            return (list.filter( task => task.isPrivate ));\r\n        default:\r\n            return list;\r\n    }\r\n}\r\n\r\nexport default TaskList;","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\MainNav.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":13,"column":10,"nodeType":"44","messageId":"45","endLine":13,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":36,"column":9,"nodeType":"48","endLine":43,"endColumn":10},{"ruleId":"42","severity":1,"message":"49","line":52,"column":27,"nodeType":"44","messageId":"45","endLine":52,"endColumn":35},{"ruleId":"50","severity":1,"message":"51","line":90,"column":50,"nodeType":"52","messageId":"53","endLine":90,"endColumn":52},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'tl' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setValue' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]