[{"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\index.js":"1","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\App.js":"2","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\reportWebVitals.js":"3","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\FilterComponents.js":"4","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\data.js":"5","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\TaskComponents.js":"6","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\MainNav.js":"7","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\AdderComponents.js":"8","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\Main.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1682,"mtime":1619990175015,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1084,"mtime":1619427484192,"results":"14","hashOfConfig":"11"},{"size":645,"mtime":1619440549052,"results":"15","hashOfConfig":"11"},{"size":4600,"mtime":1619904811085,"results":"16","hashOfConfig":"11"},{"size":1609,"mtime":1619424798237,"results":"17","hashOfConfig":"11"},{"size":6104,"mtime":1619994297578,"results":"18","hashOfConfig":"11"},{"size":4242,"mtime":1619993684467,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"12qvyxp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\index.js",[],["40","41"],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\App.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\reportWebVitals.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\FilterComponents.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\data.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\TaskComponents.js",["42","43"],"import dayjs from 'dayjs';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\nimport {ListGroup, Col, Form, Dropdown} from 'react-bootstrap';\r\n\r\nimport {PersonFill, ThreeDotsVertical, Trash2Fill, PencilSquare} from 'react-bootstrap-icons';\r\n\r\nimport React, { useState } from 'react';\r\nimport {TaskForm} from './AdderComponents';\r\n\r\ndayjs.extend(isBetween);\r\n\r\nfunction Task(props) {\r\n    const { task, deleteTask, ...propsObj } = props;    \r\n\r\n    return (\r\n        props.editMode === task.id ? <TaskForm {...propsObj} /> :\r\n        <ListGroup.Item className=\"d-flex align-items-center\">\r\n            <Col as=\"span\" className={task.isUrgent && \"text-danger font-weight-bold\"}>\r\n                <Form.Check\r\n                    custom\r\n                    type=\"checkbox\"\r\n                    id={\"custom-checkbox-\" + task.id}\r\n                    label={task.description}\r\n                />\r\n            </Col>\r\n            <Col as=\"span\" className=\"text-dark text-center\">{task.isPrivate && <PersonFill size={20} />}</Col>\r\n            <Col as=\"span\" className=\"font-075 text-right d-flex justify-content-end align-items-center\">\r\n                <span>{task.date.format(\"dddd D MMMM YYYY [at] H:mm\")}</span>\r\n                <TaskControls taskID={task.id} deleteTask={deleteTask} editTask={props.editTask} />\r\n            </Col>\r\n        </ListGroup.Item>\r\n    );\r\n}\r\n\r\nfunction TaskList(props) {\r\n    const { tasks, activeFilter, ...propsObj } = props;\r\n\r\n    let newList = applyFilter(activeFilter, tasks);\r\n    \r\n    const taskList = [...newList].map(task => <Task key={task.id} task={task} {...propsObj} />);\r\n    return (\r\n        <ListGroup variant=\"flush\" className=\"margin-b-75\">\r\n            {taskList}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nfunction TaskControls(props) {\r\n    const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n        <a\r\n            href=\"\"\r\n            ref={ref}\r\n            onClick={(e) => {\r\n                e.preventDefault();\r\n                onClick(e);\r\n            }}\r\n        >\r\n            {children}\r\n        </a>\r\n    ));\r\n\r\n    // forwardRef again here!\r\n    // Dropdown needs access to the DOM of the Menu to measure it\r\n    const CustomMenu = React.forwardRef(\r\n        ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n            const [value, setValue] = useState('');\r\n\r\n            return (\r\n                <div\r\n                    ref={ref}\r\n                    style={style}\r\n                    className={className}\r\n                    aria-labelledby={labeledBy}\r\n                >\r\n                    <ul className=\"list-unstyled m-0\">\r\n                        {React.Children.toArray(children).filter(\r\n                            (child) =>\r\n                                !value || child.props.children.toLowerCase().startsWith(value),\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        },\r\n    );\r\n    return (\r\n        <Dropdown className=\"d-inline ml-2\">\r\n            <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n                <ThreeDotsVertical color=\"\" size={18} />\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu className=\"min-width-5\" as={CustomMenu}>\r\n                <Dropdown.Item className=\"px-3\" onClick={() => props.editTask(props.taskID)}>\r\n                    <PencilSquare className=\"mr-3\" size={16} />\r\n                    Edit\r\n                </Dropdown.Item>\r\n                <Dropdown.Item className=\"px-3\" onClick={() => props.deleteTask(props.taskID)}>\r\n                    <Trash2Fill className=\"mr-3\" size={16} />\r\n                    Delete\r\n                </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n    );\r\n}\r\n\r\nconst applyFilter = (selected, list) => {\r\n    switch (selected) {\r\n        case 2:\r\n            return (list.filter(task => task.isUrgent));\r\n        case 3:\r\n            return (list.filter(task => {\r\n                if (dayjs(task.date).format(\"YYYY-MM-DD\") === dayjs().format(\"YYYY-MM-DD\")) return true;\r\n                else return false;\r\n            }));\r\n        case 4:\r\n            return (list.filter(task => {\r\n                if (dayjs(task.date).isBetween(\r\n                    dayjs().startOf('d').add(1, 'day').subtract(1, 'minute'), dayjs().startOf('d').add(8, 'day')\r\n                )) return true;\r\n                else return false;\r\n            }));\r\n        case 5:\r\n            return (list.filter(task => task.isPrivate));\r\n        default:\r\n            return list;\r\n    }\r\n}\r\n\r\nexport default TaskList;","C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\MainNav.js",[],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\AdderComponents.js",["44","45"],"C:\\Users\\giang\\Desktop\\Progetti\\Universitari\\_WIP\\AW1-labs\\BIGLAB1\\_Common\\src\\Main.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":51,"column":9,"nodeType":"52","endLine":58,"endColumn":10},{"ruleId":"53","severity":1,"message":"54","line":67,"column":27,"nodeType":"55","messageId":"56","endLine":67,"endColumn":35},{"ruleId":"53","severity":1,"message":"57","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":18},{"ruleId":"53","severity":1,"message":"58","line":2,"column":46,"nodeType":"55","messageId":"56","endLine":2,"endColumn":56},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setValue' is assigned a value but never used.","Identifier","unusedVar","'Collapse' is defined but never used.","'InputGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]